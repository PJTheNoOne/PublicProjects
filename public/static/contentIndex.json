{"index":{"title":"Hi, I'm Paul Jacobson, an Engineer from Wisconsin","links":["AboutMe/Resumes","Projects/Portfolio"],"tags":[],"content":"\nAbout Me §\nHello there! I’m a resourceful engineer with diverse mechanical and computer engineering skills. Thanks to my Engineering Physics major and Computer Science minor, I’ve delved into multiple aspects of engineering. I have hands-on experience building and using Voron 3D printers, developing real-time embedded systems, and creating walking machines and coil guns.\nBut I’m not just a techie; I love learning and sharing knowledge. As the former President of the Pioneer Drone Club at UW-Platteville, I was responsible for club operations, maintaining an extensive set of drone equipment, and organizing educational tutorials on FPV drone piloting.\nWhether it’s assembling a state-of-the-art 3D printer, coding an efficient algorithm, or leading a motivated team, I’m always up for a new challenge!\nResumes §\nIf you are interested in viewing my resumes, please feel free to check out them out here!\nMy Projects §\nPortfolio\nLinks §\n\nLinkedIn\nGithub\nResumes\n"},"AboutMe/Resumes":{"title":"Resumes","links":[],"tags":["resume"],"content":"Mechanical Focused Resume §\n\n                      \n                    \nComputer Sci/Software Engineering Resume §\n\n                      \n                    "},"Projects/Portfolio":{"title":"Portfolio","links":["Projects/NozeWipe/NozeWipe","Projects/ScribbleStarter/Scribble~Starter","Projects/SailCompass/Sail-Compass"],"tags":["project"],"content":"NozeWipe §\n     3D printer nozzle wiper for Voron printers.  \nScribble~Starter §\n     Senor design project a per-writing skill tool.  \nSail Compass §\n     Senor design project a per-writing skill tool.  "},"Projects/NozeWipe/NozeWipe":{"title":"NozeWipe","links":[],"tags":["project"],"content":"\nAbout §\nA Voron 3D printer mod for cleaning the nozzle of the printer. It was designed to be simple and adjustable, providing a suitable nozzle cleaner. It used silicone wipes and a block for the Blackbox 3D Printer.\nYou can learn more by looking at it on my Github project.\nMotivation §\nI built my Voron with the Voron-Tap, Nevermore, and the Kinematic Bed mods, instead of upgrading it over time. I noticed that z homing of the printer could be affected by any filament on the printer’s nozzle. I decided to make my own Voron mod using existing silicon wipes for a different printer to solve this.\nChallenges §\nRequirements §\nThere were several design challenges and criteria that had to be met. First, the design must be printable. It’s for a 3D-Printer so this is obvious. This means all parts must have a flat surface to print on and minimal overhangs.\nThe following requirement is cleaning the nozzle. The silicone wipes allow wiping the nozzle off while hot, and the block provides a place to heat up while stopping oozing. I chose the silicon parts because they already exist and have been proven to work. I decided not to use a silicone brush  because it would require finding that exact brush and did not allow for purging in a location that allowed for the removal of extruded filament. Finally, I chose not to use a brass brush because it could ablate the nozzles even with similar metals.\nIt must also be strong enough to be used repetitively and reliably. The NozeWipe does not experience much force, but because of the Nevermore and adjust requirement, the mount is a lever arm and can cause the mount to bend.\nThe NozeWipe is adjustable in two dimensions, z and y. It must be adjustable because I did not have a complete cad assembly for the Voron 2.4 that has a Kinematic Bed modeled. It also allows for more flexibility in using different beds and surfaces.\n\n\nThe image above was the first iteration. I used a large mount arm and holder that would screw together. It did not allow for vertical adjustment. The section where the mount arm thinned near the top was to allow for clearance around the Kinematic Bed. The thin section allowed for excess flexibility when in use.\n\nThe next iteration was to remove the flex in the arm. However, This decreases flexibility but adds complexity. It still has the screw-together mount. This was the cause of the next iteration. I could not effectively arrange the wipers and silicone blocks with heat-set inserts. The other deficit of this design is its complexity. It took more work to assemble and was overkill to hold the parts together.\n\nThe second to last iteration improved the holder and mounting arm. The holder was simplified to allow friction fix of the wipers and to hot glue the silicone block into place. However, the holder had a fatal flaw. The wall of the outer wipe was too thin and broke during installation and use. The arm was significantly improved with features to increase stiffness in the arm but allow clearance for the Kinematic Bed. The bin in this design was never used.\n\nHere is the final design. The wall of the holder was thickened, and the main changes to the design were to the bin. The bin is now shorter and magnetically attached to the holder with ribbing to increase durability. However, the wall closest to the bed is still thin and brittle.\nConclusion §\nThe NozeWipe is one of the most polished projects I have completed. It’s printable, adjustable, functional, and reliable. I can start a print and not worry about it starting and getting a perfect first layer. Furthermore, it looks like it belongs in my Voron; it is functionally beautiful.\nIn the future, I would like to see if the wipe makes the Tap more reliable. I have not tested this because some other things add uncertainty to the measurements. I will have to track those problems down before testing for any improvements."},"Projects/SailCompass/Sail-Compass":{"title":"Sail Compass","links":[],"tags":["project"],"content":"About §\nThis project aims to make a DIY sail compass for racing. This compass should have distance to line, timing, logging, and compass features.\n\nMotivation §\nWhy would someone not interested in sailing make a racing compass? It is because of two reasons. I wanted an exciting project and project that I could make with the components I had on hand. Luckily, I have a friend who is into sailing and would like one without paying for an expensive sail compass and knew this was a straightforward yet complex project.\nI was talking with said friend about wanting to start a project, and he suggested a racing compass for sailing. It combines several engineering disciplines that make it an exciting project. This project includes embedded systems, programming, electrical engineering, and mechanical engineering. This project contains all of these elements.\nProject outline §\nThe compass must report the heading, distance from the line, and a race start timer. These requirements drive the components needed: a microcontroller, GPS module, compass, buttons, and a display.\nThe final product must also be cheap, reproducible, and open source. These requirements work well with the underlying requirements for this project. Stuff I had lying around. I have several microcontrollers, electrical components, LCDs, and a GPS module from my FPV drones.\nStatus §\nStage 1 - Gathering components and research §\nI chose to use a Raspberry Pi Pico for the microcontroller and Flywoo GOKU GPS Module. The pi pico had more GPIO pins and better documentation than the XIAO ESP32C3 that was available.\nI wanted to do this project almost from scratch to learn as much as possible about the process. To accomplish this, I first need to learn to use CMake. I used Pico examples and other resources to add libraries and configure the project.\nThe first stage was to test the UART and I2C of the Flywoo Goku GPS Module. I first started with reading and printing the UART port using the onboard USB port. I used an interrupt and global buffer for testing. The output was printed directly to the USB’s UART. Next, I did the same with the I2C using polling.\nStage 2 - NMEA 0183 §\nWhile testing the UART communication between the GPS Module and the Pico, I saw that the UART output was encoded. I expected this but now need a way to process the information. I now needed to find a library to process it because I could make my own using this documentation, but that is not the focus of the project. This library is perfect for my application. It’s small, simple, and modular.\nStage 3 - Putting it all together §\nThis is the stage I’m currently in. I knew I would need to have a scheduler for this project, but I have not yet added FreeRTOS to the project. Adding FreeRTOS required adding the FreeRTOS kernel to the CMake project and configuring the FreeRTOSConfig.h header file. The next step was changing the functions and setup to use FreeRTOS tasks. I discovered a problem between FreeRTOS and the Pico’s UART interrupt handler. Using both will cause the Pico to hang.\nI suspect that the Pico gets stuck between context switches because two interrupts are using different methods in different critical sections. There are several potential ways to fix this problem switch:\nSwitch to polling for all data.\nFix the interrupt using semaphores and disabling scheduling.\nUse some other real-time operating system like the zephyrproject\nStage n §\n\nProper debugging.\nLCD\nStart line support\nDistance to start line\nHousing\n"},"Projects/ScribbleStarter/Scribble~Starter":{"title":"Scribble~Starter","links":[],"tags":["project"],"content":"About §\nThe Scribble~Starter is a pen that lights up and plays sound when writing or drawing on a planner surface. The motivation is to make a tool for promoting writing skills in young kids with or without developmental delays. The work on this project was done in collaboration with Lindsey Rowley at UnityPoint Health.\n\nWork done §\nSydney Bruce, Madalyn Kaweski, Cameron Uselding, and I completed this project as part of Engineering Physics Senior Design. Lindsey and Dr. Evensen provided several topics and project ideas for our project. We took the suggested topics and created the Scribble~Starter project. We defined the project definition and constraints, proposed and reviewed alternate designs, and completed a risk analysis. We also completed project planning steps, such as project decomposition, and planned with a Gantt Chart. We also started the process of patenting this project through WiSys. Finally, we finished designing it and testing the prototype.\nI initially helped with the machine learning model and some embedded system knowledge. Next, I helped with comparing alternative designs and project risk analysis. I mostly did the fabrication using my skills with 3D printing and soldering. I also completed the final CAD model; doing so was vital because I shrunk the prototype to a reasonable size. Most importantly, it allowed for testing with an actual wring utensil.\nFuture Improvements §\nEven though we achieved most of the project’s goals, several things can be improved. First is the clamping mechanism used to hold a writing utensil. The design used in the final prototype used three TPU parts that would clamp when compressed. The TPU sections did clamp the writing utensil; however, the mechanism to compress the TPU needs work. Another potential fix is not to compress the TPU; instead, make a long and more flexible arch. Doing so would remove moving parts and simplify assembly.\nWe did not make this change because we ran out of time. The project needed to be completed in a semester. Luckily, there are plans to finish more work on this project as another senior design project.\nHere are some pictures of the project at various stages §\n\n\n\n"}}